{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/r7746/OneDrive/\\xC1rea de Trabalho/ssr-next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/r7746/OneDrive/\\xC1rea de Trabalho/ssr-next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\r7746\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\ssr-next\\\\pages\\\\index.js\",\n    _this = this;\n\nimport React from 'react';\nimport 'isomorphic-fetch';\n\nvar Home = function Home(_ref) {\n  var repositories = _ref.repositories;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: repositories.map(function (repo) {\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: repo.name\n      }, repo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 5,\n        columnNumber: 32\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 1\n  }, _this);\n};\n\n_c = Home;\nHome.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var reponse, repositories;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return fetch(\"https//api.github.com/orgs/rocktseat/repos\");\n\n        case 2:\n          reponse = _context.sent;\n          _context.next = 5;\n          return response.json();\n\n        case 5:\n          repositories = _context.sent;\n          return _context.abrupt(\"return\", {\n            repositories: repositories\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/r7746/OneDrive/Área de Trabalho/ssr-next/pages/index.js"],"names":["React","Home","repositories","map","repo","name","id","getInitialProps","fetch","reponse","response","json"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,kBAAP;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO;AAAA,MAAGC,YAAH,QAAGA,YAAH;AAAA,sBACb;AAAA,cAAMA,YAAY,CAACC,GAAb,CAAiB,UAAAC,IAAI;AAAA,0BAAI;AAAA,kBAAmBA,IAAI,CAACC;AAAxB,SAASD,IAAI,CAACE,EAAd;AAAA;AAAA;AAAA;AAAA,eAAJ;AAAA,KAArB;AAAN;AAAA;AAAA;AAAA;AAAA,WADa;AAAA,CAAb;;KAAML,I;AAMFA,IAAI,CAACM,eAAL,yEAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACEC,KAAK,CAAC,4CAAD,CADP;;AAAA;AACdC,UAAAA,OADc;AAAA;AAAA,iBAEOC,QAAQ,CAACC,IAAT,EAFP;;AAAA;AAEdT,UAAAA,YAFc;AAAA,2CAKb;AAACA,YAAAA,YAAY,EAAZA;AAAD,WALa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;AASA,eAAeD,IAAf","sourcesContent":["import React from 'react';\r\nimport 'isomorphic-fetch';\r\n\r\nconst Home = ({ repositories }) => (\r\n<div>{repositories.map(repo => <h1 key={repo.id}>{repo.name}</h1>)}</div>\r\n\r\n);\r\n\r\n\r\n    Home.getInitialProps = async() => {\r\n       const reponse = await fetch(\"https//api.github.com/orgs/rocktseat/repos\");\r\n       const repositories = await response.json();\r\n\r\n       \r\n       return {repositories};\r\n\r\n};\r\n\r\n    export default Home;\r\n    "]},"metadata":{},"sourceType":"module"}